# thesis-template-in-org-mode -*- mode: org; coding: utf-8; -*-
# --------------------------------------------------------------------------------------------------
#
# The Documentation (either in its HTML/LaTeX/PDF format or in its Org-Mode format)
# is licensed under the *GNU Free Documentation License version 1.3* or later.
#
# The code examples are licensed under the *GNU General Public License v3* or later.
#
# --------------------------------------------------------------------------------------------------
# FOR HTML
# --------
# +SETUPFILE:           https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup



#+latex_compiler: latexmk

#+bibliography: ./Literatur.bib
# +cite_export: basic numeric noauthor/bare
#+cite_export: basic numeric authoryear

# FOR PDF / LaTeX
# ---------------
#+LATEX_CLASS:         koma-book
#+LATEX_CLASS_OPTIONS: [a4paper, fontsize=11pt, BCOR=8mm, DIV=11]

# +LATEX_HEADER:       \usepackage[showframe]{geometry}
#+LATEX_HEADER_EXTRA: \usepackage[]{geometry}
#+LATEX_HEADER:        \input{preamble}
#+latex_header:        \usepackage{tcolorbox}
#+STARTUP:             latexpreview align fold nodlcheck hidestars oddeven lognotestate

# GENERAL
# -------
#+OPTIONS:             toc:nil tex:t num:t
#+OPTIONS:             title:nil
# tex:verbatim
#+PRIORITIES:          A B C
#+TAGS:                Write(w) Update(u) Fix(f) Check(c)
#+CATEGORY:            thesis
#+DESCRIPTION:         tutorial for writing a thesis in gnu/Emacs's org-mode
#+KEYWORDS:            inf cs thesis org latex PDF HTML template
#+LANGUAGE:            en-GB
#+EXPORT_FILE_NAME:    thesis-template-in-org-mode
#+SELECT_TAGS:         export
#+EXCLUDE_TAGS:        Toto
# --------------------------------------------------------------------------------------------------
#+TITLE: Unleashing the Power of GNU/Emacs and Org-Mode
#+SUBTITLE: A Cache of Wisdom for Thesis Writing
#+DATE: {{{time(%Y-%m-%dT%H:%M:%S%z)}}}
#+AUTHOR: Felix Drees
# +EMAIL:
# --------------------------------------------------------------------------------------------------

#+LATEX: \frontmatter
#+LATEX: \input{coverpage}


#+name: englishAbstract
#+begin_abstract
The fusion of Doom/Emacs, Org Mode, and LaTeX presents a potent platform for crafting sophisticated thesis papers.[cite:see @mac2013categories p. 5]
This article provides a detailed guide on how to seamlessly integrate these tools, facilitating a smooth transition
between generating HTML and LaTeX documents, as well as PDFs, all from a single Org Mode file. Furthermore, a Nix shell,
accompanied by a shell.nix file, is introduced to ensure efficient management of the development environment.
#+end_abstract

#+latex: \vspace{2cm}

# set the language for the German Abstract
#+latex: \selectlanguage{ngerman}

#+name: germanAbstract
#+begin_abstract
Die Vereinigung von Doom/Emacs, Org Mode und LaTeX bietet eine leistungsstarke Plattform zur Verfassung eleganter Abschlussarbeiten.
Dieser Artikel erläutert detailliert, wie man diese Werkzeuge optimal kombiniert, um nahtlos zwischen der Erstellung von HTML- und
LaTeX-Dokumenten sowie PDFs aus einer einzigen Org-Mode-Datei zu wechseln.  Zusätzlich wird eine Nix-Shell mit einer begleitenden
shell.nix-Datei vorgestellt, um eine effiziente Verwaltung der Entwicklungs- und Arbeitsumgebung zu gewährleisten.
#+end_abstract

# reset the language to English
#+latex: \selectlanguage{british}

#+TOC: headlines

#+LATEX: \mainmatter

# ==================================================================================================
#
#   TOC's for contents, code blocks, tables and figures
#

# +TOC: headlines
# +TOC: listings
# +TOC: tables
# +latex: \listoffigures

# +latex: \clearpage


* Introduction / Motivation:

Embarking on the journey of using GNU/Emacs with Org-Mode for thesis writing may seem like a daunting task, especially if you're unfamiliar with the intricate workings of GNU/Emacs itself. Some may question the need to delve into Org-Mode when alternatives like LaTeX are readily available and widely embraced. However, dismissing the potential of GNU/Emacs and Org-Mode prematurely might mean overlooking a transformative experience that can redefine your approach to document creation.


** Why bother writing Org-Mode when I can use LaTeX instead?

While LaTeX is a formidable typesetting system, Org-Mode complements it by offering a more versatile and flexible platform for document creation. Org-Mode's simplicity and ease of use, coupled with the ability to seamlessly integrate LaTeX, provide a unique writing experience that combines the best of both worlds.


*** The possibilities with Org-Mode are endless!


**** Include and evaluate code:

Integrate code seamlessly within your document, making it a dynamic and interactive platform for technical content.


**** Write LaTeX in a more relaxed surrounding:

Org-Mode simplifies the LaTeX integration, providing a more user-friendly and intuitive environment for crafting your documents.


** summery

For this tutorial, we will be using a distribution of GNU/Emacs called DOOM Emacs.  Additionally, on our GNU/Linux platform, we'll leverage a package manager known as Nix to generate an environment for building both PDF and HTML versions of your thesis.  This powerful combination of tools will enhance your writing experience and streamline the process of creating, editing, and compiling your thesis documents.


*** motivating videos

- [[https://youtu.be/BAFZ-vTnfSo?feature=shared][Literate Documentation with Emacs and Org Mode]]
- [[https://youtu.be/0g9BcZvQbXU?feature=shared][Consistent Technical Documents Using Emacs and Org Mode]]
- [[https://youtu.be/cklJ58i-HUY?feature=shared][EmacsConf 2023: Authoring and presenting university courses with Emacs and a full libre software ...]]
- [[https://www.youtube.com/live/vz9aLmxYJB0?feature=shared][Emacs Tips - How to Give Presentations with Org Mode]]
- [[https://youtu.be/YmQ1CYMz-OY?feature=shared][EmacsConf 2022: Health data journaling and visualization with Org Mode and GNUplot - David O'Toole]]




* (Doom) GNU/Emacs setup and configuration

Start by installing Doom Emacs.

https://youtu.be/37H7bD-G7nE?feature=shared


** packages ~~/.config/doom/package.el~

After installing Doom Emacs - follow up by installing useful packages.
If you are not familiar with Doom Emacs's ~evil~ mode (which is a vim style set of key bindings in Emacs),
it might be a good idea to install ~evil-tutor~ and check out the tutorial for ~evil~ mode.

The ~pdf-tools~ (optional for this tutorial) will give you additional functionality for working with PDF documents in Doom Emacs, the most important being the support for viewing the PDF document in a Emacs buffer.

Finlay install ~org-special-block-extras~ for additional ~org-mode~ blocks for math and other usefull stuff.

#+begin_box Note
If you want to use the special blocks in you current org mode session - do not forget to enable it with:
kbd:M-x ~org-special-block-extras-mode~
#+end_box

#+name: emacsPackageList
#+begin_src sh :results output raw :wrap src emacs-lisp :exports both
grep "^(package" ~/.config/doom/packages.el | sed 's/).*//; s/$/)/'
#+end_src

#+RESULTS: emacsPackageList
#+begin_src emacs-lisp
(package! evil-tutor)
(package! pdf-tools)
(package! org-special-block-extras)
(package! gnuplot)
(package! gnuplot-mode)
(package! smex)
(package! fireplace)
#+end_src


#+begin_box Note
Do not forget to ~doom sync~ after adding new packages to your ~package.el~ file and reload Emacs.
#+end_box


** config ~~/.config/doom/config.el~

To complete the Doom Emacs setup / configuration you only have to addapt your ~config.el~ file.
We will now add the ~koma~ latex document classes and add support for code highlighting.

#+name: emacsConfig
#+begin_src sh :results output raw :wrap src emacs-lisp :exports both
grep -v '^\s*;' ~/.config/doom/config.el | awk 'NF {print $0; blank=0} !NF && !blank {print ""; blank=1}'
# sed '/^$/N;/^\n$/D;P;D'
#+end_src

#+RESULTS: emacsConfig
#+begin_src emacs-lisp

(global-set-key (kbd "C-x <up>") 'windmove-up)
(global-set-key (kbd "C-x <down>") 'windmove-down)
(global-set-key (kbd "C-x <left>") 'windmove-left)
(global-set-key (kbd "C-x <right>") 'windmove-right)

(ido-mode 1)
(ido-everywhere 1)

(setq tramp-auto-save-directory "/tmp")

(after! org
  (setq org-ascii-text-width 120)

  (setq org-latex-listings 'minted
        org-latex-packages-alist '(("" "minted"))
        org-latex-pdf-process
        '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
          "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))

  (setq org-latex-minted-options '(("frame" "lines")
                                   ("linenos" "true")
                                   ("fontsize" "\\small")
                                   ("breaklines" "true")
                                   ("breakanywhere" "true")
                                   ("tabsize" "4")))

  (setq org-latex-classes
        '(("article" "\\documentclass[11pt]{article}"
           ("\\section{%s}" . "\\section*{%s}")
           ("\\subsection{%s}" . "\\subsection*{%s}")
           ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
           ("\\paragraph{%s}" . "\\paragraph*{%s}")
           ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))

  (add-to-list 'org-latex-classes
               '("koma-book" "\\documentclass{scrbook}"
                 ("\\chapter{%s}" . "\\chapter*{%s}")
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

  (add-to-list 'org-latex-classes
               '("koma-article"
                 "\\documentclass{scrartcl}"
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
  )

(setq doom-theme 'doom-one)

(setq display-line-numbers-type 'relative)

(setq org-directory "~/org/")

#+end_src


#+begin_box Note
Before running kbd:SPC-h-r-r (M-x doom/reload) - either wait for the ~nix~ ~env~ setup or
install ~pygments~ yourself via ~pip3 install pygments~.
#+end_box


* nix shell environment

Now that Emacs is ready - we can procued by declaring an ~shell.nix~ environment file, in which we will
specify all the  packages we will use for compiling the ~org-mode~ file and all library's and other stuff used in the thesis (e.g. ~numpy~ ~python~ ~haskell~).

We will use ~gnuplot~ for plotting stuff, ~graphics~ for generating nice graphs in the ~dot~ language.
In addition we need ~texlive~ and therefore can use ~tikz~ to generate nice plots/graphs.
Last but not least, we install the ~pygments~ lib we are using for highlighting the code blocks in addition to the
~python~ packages used in the source code in the thesis.

If you want to install ~haskell~ or ~R~ for your thesis and haven't done so system wide - this might be a good opportunity to add the software.

#+begin_box Install Nix (the package manager)

#+attr_latex: :options frame=single :wrap src text
#+begin_src shell
sh <(curl -L https://nixos.org/nix/install) --daemon
#+end_src

https://nixos.org/download
#+end_box

# :wrap src text

#+name: nix-config-cat
#+attr_latex: :options frame=single
#+caption: ~nix-shell~ config for generating a build environment
#+begin_src sh :results output raw :wrap src nix :exports both
cat shell.nix
#+end_src

#+RESULTS: nix-config-cat
#+begin_src nix
{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {
  buildInputs = with pkgs; [
    (python312.withPackages(ps: with ps; [
      numpy         # for math
      # latexify-py   # for converting python funcs to latex
      scipy         # for math and physics
      pygments      # for syntax highlighting
      matplotlib    # for plotting
      seaborn       # for plotting
      scikit-learn  # for ml stuff
    ]))
    # texlive.combined.scheme-full
    graphviz
    gnuplot
  ];

  shellHook = ''
    echo "entering dev environment"
  '';
}
#+end_src


Run ~nix-shell~ to enter the now defined development environment.

After entering our specified environment - you can run ~make doom~ to start Doom Emacs.


* start messing around

Since everything should be ready by now - please feel free to mess around with the ~thesis.org~ file within Emacs.

1. start the nix development environment

   #+begin_src shell
nix-shell  # schould open a nix shell with all the packages defined in the local shell.nix config
   #+end_src

2. open doom Emacs form within the development environment

   #+begin_src shell
doom run &
   #+end_src

3. open ~thesis.org~

   in doom Emacs, you could either open a file with kbd:M-x ~dired~ or by using ~SPC-.~

4. mess around

   Finlay adapt the ~thesis.org~ file for your needs or just explore the file from within Emacs.


#+begin_box Export to HTML and PDF
You can export your derivative with the key binding: kbd:C-c kbd:C-e
#+end_box


* convert python 2 latex

#+name: py2texImports
#+attr_latex: :options frame=single :wrap src text
#+begin_src python :session main :exports code :results none :wrap src text
import math
import numpy as np
import sys
import scipy
# import latexify
#+end_src



#+name: py2texImportTable
#+begin_src python :results table :session main :exports results :hlines yes :colnames yes
[line.split("=") for line in f"python: {sys.version = }\n{np.__version__ = }\n{scipy.__version__ = }".split("\n")]
# latexify.__version__ = '0.0.0a0'\n
#+end_src

#+CAPTION: table of library's with corresponding version
#+RESULTS: py2texImportTable
| python: sys.version | '3.11.8 (main, Feb  7 2024, 21:52:08) [GCC 13.2.0]' |
| np.__version__      | '1.26.4'                                            |
| scipy.__version__   | '1.13.1'                                            |


With the imported library's, we can now convert a ~python~ function to ~latex~


#+name: isPrimeFunc
#+attr_latex: :options frame=single :wrap src text
#+caption: code block containing prime checking functions
#+begin_src python -n -r :results output :session main :exports code
def recHelper(x: int, d: int = 3) -> int:      (ref:recHelperRef)
    # forall x in [3, infty)
    if x % 2 == 0:
        return 0
    elif d > math.floor(math.sqrt(x)):
        return 1
    elif x % d == 0:
        return 0
    else:
        return recHelper(x, d + 2)

def isPrime(x: int) -> int:                    (ref:isPrimeRef)
    if x <= 1:  # forall x in (infty, 1] : 1
        return 0
    elif x == 2:
        return 1
    else:  # forall x in (2, infty)
        return recHelper(x, 3)
#+end_src

#+RESULTS: isPrimeFunc


In line [[(isPrimeRef)]] is the main definition of the recursive basecase.
[[(recHelperRef)][Line (recHelperRef)]] starts by declaring a recursive helper for the main prime checking function.


# +name: genLatexForPrimeFunc
# +begin_src python :results output drawer :session main :exports results
# print(f"\\[ {latexify.get_latex(isPrime)} \\]\n" \
#      f"\\\\\n\\[ {latexify.get_latex(recHelper)} \\]")
# +end_src

#+RESULTS: genLatexForPrimeFunc
:results:
:end:

\[ \mathrm{isPrime}(x) = \left\{ \begin{array}{ll} {0}, & \mathrm{if} \ {x \le {1}} \\ {1}, & \mathrm{if} \ {x = {2}} \\ \mathrm{recHelper}\left(x, {3}\right), & \mathrm{otherwise} \end{array} \right. \]
\\
\[ \mathrm{recHelper}(x, d) = \left\{ \begin{array}{ll} {0}, & \mathrm{if} \ {x \mathbin{\%} {2} = {0}} \\ {1}, & \mathrm{if} \ {d > \left\lfloor{\sqrt{x}}\right\rfloor} \\ {0}, & \mathrm{if} \ {x \mathbin{\%} d = {0}} \\ \mathrm{recHelper}\left(x, d + {2}\right), & \mathrm{otherwise} \end{array} \right. \]



#+name: checkIfPrime
#+begin_src python :session main :exports none :output none :var x=5
bool(isPrime(x))
#+end_src

#+RESULTS: checkIfPrime
#+begin_example
True
#+end_example


Now we can call the ~isPrime~ function with the parameter ~5~ and ~6~:

 - is ~5~ a prime number? result of ~isPrime~ function: call_checkIfPrime(x=5) {{{results(=True=)}}}
 - is ~6~ a prime number? result of ~isPrime~ function: call_checkIfPrime(x=6) {{{results(=False=)}}}


* Function composition

Graph using the ~dot~ language

#+name: dotGraph
#+BEGIN_SRC dot :file ./img-gen-dir/function-composition.png :cmdline -Kdot -Tpng :exports both
digraph G {
    node [shape=circle, fontname="Courier", fontsize=16]
    edge [fontname="Courier", fontsize=16]
    A:nw -> A [label="id"]
    A -> B [label="f"]
    B -> C [label="g"]
    A -> C [xlabel="g . f "]
    {rank=same; A B}
}
#+END_SRC

#+ATTR_LATEX: :placement [H] :float nil :width 0.4\textwidth
#+caption: function composition and identity
#+RESULTS: dotGraph
[[file:./img-gen-dir/function-composition.png]]


Graph using latex ~tikz picture~


#+begin_export latex
\begin{figure}
    \centering
    \begin{tikzpicture}[scale=3]
    	% Knoten
    	\node (s) at (0,0) [circle,draw] {s};
    	\node (0) at (1.5,0.5) [circle,draw] {0};
    	\node (1) at (1.5,-0.5) [circle,draw] {1};
    	\node (t) at (3,0) [circle,draw] {t};

    	% Kanten
    	\draw[->] (s) to [bend left =10] node[left] {$100$} (0);
    	\draw[dashed, ->] (0) to [bend left =10] node[left] {$0$} (s);

    	\draw[->] (s) to [bend left =10] node[left] {$100$} (1);
    	\draw[dashed, ->] (1) to [bend left =10] node[left] {$0$} (s);

    	\draw[->] (0) to [bend left =10] node[left] {$1$} (1);
    	\draw[dashed, ->] (1) to [bend left =10] node[left] {$0$} (0);

    	\draw[->] (0) to [bend left =10] node[left] {$100$} (t);
    	\draw[dashed, ->] (t) to [bend left =10] node[left] {$0$} (0);

    	\draw[->] (1) to [bend left =10] node[left] {$100$} (t);
    	\draw[dashed, ->] (t) to [bend left =10] node[left] {$0$} (1);
    \end{tikzpicture}
    \label{latex-graph}
    \caption[Graph]{Some random Graph}
\end{figure}
#+end_export


* Some random Proof

Let

    \[ A = \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix} \in \mathbb{R}^{3 \times 3}. \]

    Proof that the following applies to all $\beta \in \mathbb{N}_{>0}$ :

    \[ A^\beta = \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ \beta & 0 & 1 \end{pmatrix}. \]

    \enquote{Matrix multiplication as composition | Chapter 4, Essence of linear algebra} [fn:3b1b: see \url{https://youtu.be/XkY2DOUCWMU}]
    The Matrix $A$ can also be interpreted as a linear transformation in $\R^3$.

    # \begin{figure}[!htb]
    #    \centering
    #    \includegraphics[width=7cm]{rotate_shear_record.png}
    #    \caption{Composition of Transformations}
    #    Source: \url{https://www.3blue1brown.com/lessons/matrix-multiplication}
    #    \label{fig:my_label_01}
    # \end{figure}

# +NAME: fig:some-random-fig
# +caption: Composition of Transformations
# +ATTR_LATEX: :width 5cm
# +ATTR_HTML: :width 600px :alt Some random alt text
# [[file:./rotate_shear_record.png]


 This interpretation makes it easier to understand the theorem to be proven, and makes it seem almost trivial.



 #+begin_export latex
\begin{figure}[!h]
    \centering
    \label{fig:my_label}
    \begin{tikzpicture}
        \begin{scope}
            % \tdplotsetmaincoords{70}{110}
            \draw (0,0,0) node[above left] {};
            \draw[thick, ->] (0,0,0) -- (2,0,0) node[anchor=north west]{$y$};
            \draw[thick, ->] (0,0,0) -- (0,2,0) node[anchor=south west]{$z$};
            \draw[thick, ->] (0,0,0) -- (0,0,2) node[anchor=south east]{$x$};

            \draw[thick, ->,green] (0,0,0) -- (1,0,0) node[anchor=north east] {$\vec{j}$};
            \draw[thick, ->,red] (0,0,0) -- (0,1,0) node[anchor=north west]{$\vec{k}$};
            \draw[thick, ->,blue] (0,0,0) -- (0,1,1) node[anchor=south east]{$\vec{i}$};
            % \tdplotdrawarc{(0,0,0)}{0.5}{0}{110}{anchor=north}{$\phi$}
        \end{scope}
        \begin{scope}[shift={(5, 0)}]
            \draw[thick, <->] (0, -0.5) -- (0, 2) node[anchor=south west]{$z$};
            \draw[thick, <->] (-0.5, 0) -- (2, 0) node[anchor=north west]{$x$};

            \draw[thick, ->,blue] (0, 0) -- (1, 1) node[anchor=west]{$\vec{i}_1$};
            \draw[thick, ->,blue] (0, 0) -- (1, 2) node[anchor=west]{$\vec{i}_2$};
            \draw[thick, ->,blue] (0, 0) -- (1, -0.5) node[anchor=west]{$\vec{i}_{-0.5}$};

            \draw[dashed, <->] (1, -0.7) node[anchor=north west]{$1$} -- (1, 2.2);
            %\tdplotdrawarc{(0,0)}{0.7}{0}{45}{}{};
        \end{scope}
    \end{tikzpicture}
    \caption{$\R^3$ with linearer transformation $A^1$}
\end{figure}
#+end_export


\[ \text{With} \vec{i} = (1, 0, \beta)^T \text{ and } \vec{j} = (0, 1, 0)^T \text{ and } \vec{k} = (0, 0, 1)^T. \]

This means that only the $x$ coordinate is transformed.
No matter how often you exponentiate this transformation, the $y$ and $z$ axes will not change, but the $x$ axis will increasingly approach the $y$ axis.

    $\mathrm{Z\kern-.3em\raise-0.5ex\hbox{Z}}$

    \[ \forall \beta \in \N^* \mid \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix}^\beta = \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ \beta & 0 & 1 \end{pmatrix} \]


#+ATTR_LATEX: :options [Proof of important theorem]
#+BEGIN_proof

    \induction{\beta}

    \indv

    \[ \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix}^\beta = \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ \beta & 0 & 1 \end{pmatrix} \]



    \vspace{1cm}

    \rem

    \begin{quote}
        $~~$\\
        \indb{\beta}{0} is also a valid starting point ...
    \end{quote}


    \vspace{1cm}


    \indb{\beta}{1}

    \[ \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix}^1 = \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix} \]

    \inds{\beta}

    \begin{align}
        \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix}^{\beta + 1} &= \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ (\beta + 1) & 0 & 1 \end{pmatrix} \\
        \Leftrightarrow \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix}^\beta \cdot \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix} &= \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ (\beta + 1) & 0 & 1 \end{pmatrix} \\
        \xLeftrightarrow{\star} \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ \beta & 0 & 1 \end{pmatrix} \cdot \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ 1 & 0 & 1 \end{pmatrix} &= \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ (\beta + 1) & 0 & 1 \end{pmatrix} \\
        \Leftrightarrow \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ \beta + 1 & 0 & 1 \end{pmatrix} &= \begin{pmatrix} 1 & 0 & 0 \\ 0 & 1 & 0 \\ \beta + 1 & 0 & 1 \end{pmatrix}
    \end{align}

#+END_proof


* plotting functions and their root function / derivation

** python

#+begin_src python :exports code
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Set seed for reproducibility
np.random.seed(42)

# Generate random 5x5 covariance matrix
cov_matrix = np.random.rand(5, 5)
cov_matrix = np.dot(cov_matrix, cov_matrix.T)

# Generate random data with the specified covariance matrix
data = np.random.multivariate_normal(mean=[0, 0, 0, 0, 0], cov=cov_matrix, size=100)

# Create scatter plot
plt.figure(figsize=(12, 6))

# Scatter plot
plt.subplot(1, 3, 1)
sns.scatterplot(x=data[:, 0], y=data[:, 1])
plt.title('Scatter Plot')

# Box plot
plt.subplot(1, 3, 2)
sns.boxplot(data=data)
plt.title('Box Plot')

# Violin plot
plt.subplot(1, 3, 3)
sns.violinplot(data=data, inner='quartile', palette='muted')
plt.title('Violin Plot')

plt.tight_layout()
# plt.show()
plt.savefig("./img-gen-dirrandom-py-plot.png")
#+end_src

#+RESULTS:
#+begin_example
None
#+end_example


#+NAME: fig:some-random-fig-py
#+caption: python function plot
#+ATTR_LATEX: :placement [H] :float nil :width 0.4\textwidth
#+ATTR_HTML: :width 600px :alt Some random python functiono plot
[[file:./img-gen-dir/random-py-plot.png]]



#+begin_src python
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
import numpy as np

# Load the Iris dataset from scikit-learn
iris = load_iris()
iris_data = iris.data
iris_feature_names = iris.feature_names

# Create a covariance matrix
cov_matrix = np.cov(iris_data, rowvar=False)

# Create a heatmap using Seaborn
plt.figure(figsize=(8, 6))
sns.heatmap(cov_matrix, annot=True, cmap='coolwarm', xticklabels=iris_feature_names, yticklabels=iris_feature_names)
plt.title('Covariance Matrix of Iris Dataset Features')
# plt.show()
plt.savefig("./img-gen-dir/random-covariance-fig.png")
#+end_src

#+RESULTS:
#+begin_example
None
#+end_example


[[file:./img-gen-dir/random-covariance-fig.png]]



** tikzpicture


#+begin_export latex
\begin{tikzpicture}
  \begin{axis}[
    xlabel={$x$},
    ylabel={$y$},
    domain=0.1:3.5,
    xmin=0, xmax=3.5,
    ymin=-5, ymax=10,
    samples=100,
    grid=major,
    legend pos=north west,
    width=14cm, % Increased width
    height=10cm, % Increased height
  ]

    \addplot[color=blue,smooth,thick] {sin(deg(x))};
    \addplot[color=green,smooth,thick] {ln(x)};
    \addplot[color=orange,smooth,thick] {log2(x)};
    \addplot[color=purple,smooth,thick] {x^6 / x^2 * sin(x)};

    \legend{$\sin(x)$, $\ln(x)$, $\log_2(x)$, $\frac{x^6}{x^2} \cdot \sin(x)$}
  \end{axis}
\end{tikzpicture}
#+end_export


** org plot

see https://orgmode.org/manual/Org-Plot.html

#+PLOT: title:"Citas" ind:1 deps:(3) type:2d with:histograms set:"yrange [0:]" file:"./img-gen-dir/citas.png"
| Sede      | Max cites | H-index |
|-----------+-----------+---------|
| Chile     |    257.72 |   21.39 |
| Leeds     |    165.77 |   19.68 |
| Sao Paolo |     71.00 |   11.50 |
| Stockholm |    134.19 |   14.33 |
| Morelia   |    257.56 |   17.67 |

[[file:./img-gen-dir/citas.png]]

#+begin_comment

#+PLOT: title:"An evaluation of plaintext document formats" transpose:yes type:radar min:0 max:4 file:"./img-gen-dir/eval-of-plaintext-formats.png"
| Format            | Fine-grained-control | Initial Effort | Syntax simplicity | Editor Support | Integration's | Ease-of-referencing | Versatility |
|-------------------+----------------------+----------------+-------------------+----------------+---------------+---------------------+-------------|
| Word              |                    2 |              4 |                 4 |              2 |             3 |                   2 |           2 |
| LaTeX             |                    4 |              1 |                 1 |              3 |             2 |                   4 |           3 |
| Org Mode          |                    4 |              2 |               3.5 |              1 |             4 |                   4 |           4 |
| Markdown          |                    1 |              3 |                 3 |              4 |             3 |                   3 |           1 |
| Markdown + Pandoc |                  2.5 |            2.5 |               2.5 |              3 |             3 |                   3 |           2 |

#+end_comment


[[file:./img-gen-dir/eval-of-plaintext-formats.png]]



| Sede          | Max cites |              |
|---------------+-----------+--------------|
| Chile         |    257.72 | WWWWWWWWWWWW |
| Leeds         |    165.77 | WWWWWWWh     |
| Sao Paolo     |     71.00 | WWW;         |
| Stockholm     |    134.19 | WWWWWW:      |
| Morelia       |    257.56 | WWWWWWWWWWWW |
| Rochefourchat |      0.00 |              |
| test ...      |      42.0 | WW           |
#+TBLFM: $3='(orgtbl-ascii-draw $2 0.0 257.72 12)



** gnu plot

see https://gitlab.com/dto/health-template/-/tree/main?ref_type=heads by David O'Toole


#+latex: \begin{comment}

#+BEGIN: columnview :hlines 1 :id myid
#+tblname: mydata
| Date             | exercise minutes | sleep hours | nicotine doses | distress scale | missed doses | pain scale |
|------------------+------------------+-------------+----------------+----------------+--------------+------------|
|                  |                  |             |                |                |              |            |
| [2022-09-13 Tue] |                0 |          12 |              8 |              5 |            0 |          0 |
| [2022-09-14 Wed] |                0 |          12 |              7 |              4 |            0 |          0 |
| [2022-09-15 Thu] |               20 |          12 |              8 |              3 |            1 |          0 |
| [2022-09-16 Fri] |               15 |          14 |              5 |              3 |            0 |          0 |
| [2022-09-17 Sat] |               30 |          12 |              7 |              4 |            0 |          1 |
| [2022-09-18 Sun] |               15 |           9 |              7 |              5 |            0 |          2 |
| [2022-09-19 Mon] |                0 |           7 |              6 |              6 |            0 |          3 |
| [2022-09-20 Tue] |               20 |           8 |              7 |              4 |            0 |          3 |
| [2022-09-21 Wed] |               15 |          10 |              5 |              3 |            0 |          3 |
| [2022-09-22 Thu] |               20 |          11 |              6 |            3.5 |            0 |          3 |
| [2022-09-23 Fri] |                0 |           9 |              6 |              3 |            0 |          3 |
| [2022-09-24 Sat] |               10 |          13 |              6 |              2 |            0 |          3 |
| [2022-09-25 Sun] |                0 |         8.5 |              5 |              2 |            0 |          2 |
| [2022-09-26 Mon] |               15 |          13 |              7 |              6 |            0 |          2 |
| [2022-09-27 Tue] |                0 |          10 |              5 |              5 |            1 |          2 |
| [2022-09-28 Wed] |               30 |          10 |              5 |              3 |            0 |          2 |
| [2022-09-29 Thu] |                0 |          12 |              4 |              3 |            0 |          2 |
| [2022-09-30 Fri] |               20 |           6 |              4 |              4 |            0 |          2 |
| [2022-10-01 Sat] |               10 |         7.5 |              6 |              3 |            0 |          2 |
| [2022-10-02 Sun] |               15 |           8 |              7 |              2 |            0 |          2 |
| [2022-10-03 Mon] |                0 |           6 |              5 |              2 |            0 |          2 |
| [2022-10-04 Tue] |                0 |         8.5 |              5 |              4 |            0 |          2 |
| [2022-10-05 Wed] |               15 |           8 |              5 |              4 |            0 |          2 |
| [2022-10-06 Thu] |               25 |         8.5 |              5 |              4 |            0 |          2 |
| [2022-10-07 Fri] |               25 |           6 |              5 |              3 |            0 |          2 |
| [2022-10-08 Sat] |               20 |           9 |              0 |              3 |            0 |          2 |
| [2022-10-09 Sun] |                0 |           6 |              3 |              4 |            0 |          2 |
| [2022-10-10 Mon] |                0 |           6 |              5 |              5 |            0 |          2 |
| [2022-10-11 Tue] |                0 |         6.5 |              4 |              4 |            0 |          2 |
| [2022-10-12 Wed] |                0 |           3 |              0 |              3 |            0 |          2 |
| [2022-10-13 Thu] |                0 |         4.5 |              0 |              3 |            0 |          3 |
| [2022-10-14 Fri] |                0 |           4 |              0 |              3 |            0 |          3 |
| [2022-10-15 Sat] |                0 |           5 |              0 |              3 |            1 |          2 |
| [2022-10-16 Sun] |                0 |           2 |              0 |              4 |            0 |          1 |
| [2022-10-17 Mon] |                0 |         4.5 |              0 |              3 |            0 |          2 |
#+END:

#+latex: \end{comment}


#+begin_src gnuplot :var data=mydata
# clear graphics from any previous run
reset

# define output parameters
set terminal pngcairo font "Arial" size 900,900
set output './img-gen-dir/example.png'

# use org-mode format for input
set datafile separator "\t"
set timefmt "%Y-%m-%d"

# set up for time series data
set xdata time
set x2tics 1 format '' scale 0

# one X tick per day
set xtics 24*60*60

# vertical line on each day
set grid xtics

# one Y tick every five points
set ytics 5

# rotate labels to fit better
set xtics rotate by 60 right

set key box lc 'gray60'
set xtics format "%a %m/%d"
set yrange [0:40]

set linetype 1 lw 2 lc rgb 'forest-green' ps 1 pt 9
set linetype 2 lw 2 lc rgb 'purple' ps 1 pt 1
set linetype 3 lw 2 lc rgb 'dark-yellow' ps 1 pt 1
set linetype 4 lw 2 lc rgb 'dark-pink' ps 1 pt 1
set linetype 5 lw 2 lc rgb 'red' ps 1 pt 11
set linetype 6 lw 2 lc rgb 'orange' ps 1 pt 1
set linetype 7 lw 1 lc rgb 'forest-green'

set arrow 7 from graph 0, first 20 to graph 1, first 20 lt 7 dt '..'
set label "20" at graph 0.52, first 20 font 'Arial,16' tc rgb 'forest-green'
set linetype 8 lw 1 lc rgb 'purple'
set arrow 8 from graph 0, first 8 to graph 1, first 8 lt 8 dt '..'
set label "8" at graph 0.52, first 8 font 'Arial,16' tc rgb 'purple'
set linetype 9 lw 1 lc rgb 'dark-yellow'
set arrow 9 from graph 0, first 5 to graph 1, first 5 lt 9 dt '..'
set label "5" at graph 0.52, first 5 font 'Arial,16' tc rgb 'dark-yellow'

plot data using 1:($2 == 0 ? NaN : $2) with points title 'exercise (minutes)' lt 1, \
     data using 1:3 with lines title 'sleep (hours)' lt 2, \
     data using 1:4 with lines title 'nicotine (doses)' lt 3, \
     data using 1:5 with lines title 'distress (scale)' lt 4, \
     data using 1:($6 == 0 ? NaN : $6) with points title 'missed (doses)' lt 5, \
     data using 1:7 with lines title 'pain (scale)' lt 6
#+end_src

#+RESULTS:



#+CAPTION: This is the caption
#+NAME: fig:org_label
[[file:./img-gen-dir/example.png]]



* logic resolution proof

\lipsum[2-4]


** forward direction (\rightarrow)

#+name: proff
#+begin_tree
- $\rightarrow I^1$ :: (A \rightarrow B) \rightarrow (\lnot B \rightarrow \lnot A)
  - $\rightarrow I^2$ :: \lnot B \rightarrow \lnot A
    - $\lnot I^3$ :: \lnot A
      - $\lnot E$ :: \perp
        - mp :: B
          - [A]^3
          - [A \rightarrow B]^1
        - [\lnot B]^2
#+end_tree

#+begin_export html
</br></br>
#+end_export


** back direction (\leftarrow)

#+begin_tree
- $\rightarrow I^4$ :: (\lnot B \rightarrow \lnot A) \rightarrow (A \rightarrow B)
  - $\rightarrow I^5$ :: A \rightarrow B
    - $\text{raa}^6$ :: B
      - $\lnot E$ :: \perp
        - [A]^5
        - mp :: \lnot A
          - [\lnot B]^6
          - [\lnot B \rightarrow \lnot A]^4
#+end_tree

#+begin_export html
</br></br>
#+end_export


** both directions (\leftrightarrow)

#+begin_tree
- $\leftrightarrow$ I :: \vdash (A \rightarrow B) \leftrightarrow (\lnot B \rightarrow \lnot A)
  - (A \rightarrow B) \rightarrow (\lnot B \rightarrow \lnot A)
  - (\lnot B \rightarrow \lnot A) \rightarrow (A \rightarrow B)
#+end_tree



#+LATEX: \appendix


* some random appendix

maybe add a document or other related but not that important info, listings plots etc. here ...



#+LATEX: \backmatter


* TOC's


#+LATEX: \section*{Bibliography}
#+LATEX: \addcontentsline{toc}{section}{Bibliography}
#+print_bibliography:

#+LATEX: \addcontentsline{toc}{section}{Listings}
#+TOC: listings

#+LATEX: \addcontentsline{toc}{section}{Tables}
#+TOC: tables

#+LATEX: \addcontentsline{toc}{section}{Figures}
#+LATEX: \listoffigures
